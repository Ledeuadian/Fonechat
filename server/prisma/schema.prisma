// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema



generator client {
  provider = "prisma-client-js"
}

// vercel postgress
datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

//local postgress
// datasource db{
//   provider = "postgresql"
//   url = = env("DATABASE_URL:")
// }

// vercel postgress
// datasource db {
//   provider = "postgresql"
//   url = env("POSTGRES_PRISMA_URL") // uses connection pooling
//   directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
//   shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
// }


model User {
  id Int @id @default(autoincrement())
  email String @unique
  name String
  profilePicture String @default("")
  about String @default("")
  sentMessages Messages[] @relation("sentMessages")
  recievedMessages Messages[] @relation("recievedMessages")
}


model Messages {
  id Int @id @default(autoincrement())
  sender User @relation("sentMessages", fields: [senderId], references:[id])
  senderId Int
  reciever User @relation("recievedMessages", fields:[recieverId],references:[id])
  recieverId Int
  type String @default("text")
  message String
  messageStatus String @default("sent")
  createdAt DateTime @default(now())
}


// model User {
//   id String @id @default(auto()) @map("_id") @db.ObjectId 
//   email String @unique
//   name String
//   profilePicture String @default("")
//   about String @default("")
//   sentMessages Messages[] @relation("sentMessages")
//   recievedMessags Messages[] @relation("recievedMessages")
// }

// model Messages{
//     id String @id @default(auto()) @map("_id") @db.ObjectId
//     senderId String @db.ObjectId
//     recieverId String  @db.ObjectId
//     type String @default("text")
//     message String
//     messageStatus String @default("sent")
//     createdAt DateTime @default(now())

//     sender User @relation("sentMessages", fields:[senderId],references:[id])
//     reciever User @relation("recievedMessages", fields:[recieverId],references:[id])
    
// }
